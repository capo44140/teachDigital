/**
 * Script pour g√©n√©rer les cl√©s VAPID
 * Utilis√© pour les notifications push PWA
 */

import webpush from 'web-push';

function generateVapidKeys() {
  console.log('üîë G√©n√©ration des cl√©s VAPID...');
  
  try {
    const vapidKeys = webpush.generateVAPIDKeys();
    
    console.log('\n‚úÖ Cl√©s VAPID g√©n√©r√©es avec succ√®s !');
    console.log('\nüìã Ajoutez ces cl√©s √† vos variables d\'environnement :');
    console.log('\n# Backend (.env)');
    console.log(`VAPID_PUBLIC_KEY=${vapidKeys.publicKey}`);
    console.log(`VAPID_PRIVATE_KEY=${vapidKeys.privateKey}`);
    
    console.log('\n# Frontend (.env.local)');
    console.log(`VITE_VAPID_PUBLIC_KEY=${vapidKeys.publicKey}`);
    
    console.log('\n# Vercel (Variables d\'environnement)');
    console.log(`VAPID_PUBLIC_KEY=${vapidKeys.publicKey}`);
    console.log(`VAPID_PRIVATE_KEY=${vapidKeys.privateKey}`);
    
    console.log('\n‚ö†Ô∏è  IMPORTANT :');
    console.log('- Gardez la cl√© priv√©e SECR√àTE');
    console.log('- Ne commitez JAMAIS ces cl√©s dans le code');
    console.log('- Utilisez des variables d\'environnement');
    console.log('- R√©g√©n√©rez les cl√©s pour la production');
    
    return vapidKeys;
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration des cl√©s VAPID:', error);
    console.log('\nüí° Solution :');
    console.log('1. Installez web-push : npm install web-push');
    console.log('2. Ou utilisez : npx web-push generate-vapid-keys');
    return null;
  }
}

// Ex√©cuter si le script est appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  generateVapidKeys();
}

export { generateVapidKeys };
